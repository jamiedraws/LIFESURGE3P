@use "sass:color";
@use "sass:map";

$select: ".hero" !default;

$mq: (
    banner-max: 40rem,
    banner-min: 56.25rem
);

// config
@use "../config/fonts";
@use "../config/colors";

// layouts
@use "../layouts/nav";

// abstracts
@use "../../Shared/css/template/base/abstracts/group";
@use "../../Shared/css/template/base/abstracts/position";

// themes
@use "../../Shared/css/template/base/themes/background";

%center-to-stage {
    @include position.center-absolute;
    display: flex;

    align-items: center;
}

%contain-text-group {
    @include group.contain;
    justify-content: center;
}

@mixin base {
    @keyframes reveal-hero-image {
        from {
            transform: translateX(-60vw) skewX(-45deg);
        }

        to {
            transform: translateX(-303vw) skew(-45deg);
        }
    }

    @keyframes reveal-hero-title {
        from {
            transform: translateY(0%);
            opacity: 0;
        }

        to {
            transform: translateY(6%);
            opacity: 1;
        }
    }

    #{$select} {
        text-align: center;
        text-transform: uppercase;
        font: 1.5em fonts.get(primary-cond), sans-serif;

        &__bg-title {
            min-height: 16em;
            position: relative;
            font-size: clamp(0.75em, 4vmin, 1em);

            @media all and (max-width: map.get($mq, banner-min)) {
                font-size: clamp(0.75em, 3vmax, 0.7em);
            }

            @media all and (max-width: map.get($mq, banner-max)) {
                font-size: 4vw;
            }
        }

        &__bg {
            @extend %center-to-stage;
            justify-content: center;
            background: url(/images/hero/landing-page.jpg) center center
                no-repeat;
            background-size: cover;
            overflow: hidden;

            img {
                opacity: 0;
                @media all and (min-width: 40rem) {
                    width: auto;
                }

                @media all and (max-width: 40rem) {
                    width: 100%;
                }
                height: 100%;
            }

            @supports (object-fit: cover) {
                background: none;

                img {
                    object-fit: cover;
                    opacity: 1;
                }
            }

            @media all and (min-width: map.get($mq, banner-min)) {
                &::after {
                    content: "";
                    @include position.center-absolute;
                    background: colors.get(primary);
                    width: 200vw;
                    animation: reveal-hero-image 0.75s ease-in-out forwards 0.5s;
                }
            }

            @media (prefers-reduced-motion) {
                &::after {
                    display: none;
                }
            }
        }

        &__title {
            @extend %center-to-stage;
            justify-content: flex-start;
            flex-direction: column;

            font-size: 1.75em;
            line-height: 1;

            transform: translateY(6%);
            animation: reveal-hero-title 1.5s ease-in-out forwards;

            @media (prefers-reduced-motion) {
                animation: none;
            }

            > [data-title] {
                position: relative;

                &::before {
                    content: attr(data-title);
                    color: colors.get(primary);
                    pointer-events: none;
                    @include position.center-absolute;
                    text-shadow: 0 0 1em colors.get(primary),
                        0 0 1em colors.get(primary), 0 0 1em colors.get(primary),
                        0 0 1em colors.get(primary);
                    filter: drop-shadow(0 0 0.25em colors.get(primary));
                }

                > span {
                    position: relative;
                    z-index: 1;
                }
            }
        }

        &__banner {
            background: colors.get(light);
            box-shadow: 0 0.1em 0.25em
                color.adjust(colors.get(primary), $alpha: -0.3);
            position: relative;
            z-index: 1;
        }

        &__text {
            @extend %contain-text-group;

            margin: auto;
            max-width: 25em;
        }

        &__nav {
            $offset: 2em;

            @extend %contain-text-group;
            font-size: 0.7em;

            margin: -#{$offset} 0 #{$offset};
            transform: translateY(50%);
        }

        @content;
    }
}

@mixin ticket {
    #{$select} {
        &--ticket {
            #{$select} {
                &__ticket-button {
                    @media all and (min-width: map.get(nav.$mq, container-min)) {
                        display: none;
                    }
                }
            }

            @content;
        }
    }
}
